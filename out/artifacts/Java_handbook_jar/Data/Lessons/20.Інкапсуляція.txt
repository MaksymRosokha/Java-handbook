Інкапсуляція – це одна із чотирьох фундаментальних концепцій ОВП. Назви трьох: успадкування , поліморфізм , абстракція .

Інкапсуляція Java є механізмом обгортання даних (змінних) і коду, що працює з даними (методами), в одне ціле. В інкапсуляції змінні класу будуть приховані від інших класів і доступ до них можна отримати лише за допомогою методу їх поточного класу. Інакше це називається прихованням даних.

Для досягнення інкапсуляції в Java:
•Оголосіть змінні класу як private.
•Надайте public до методів встановлення та отримання (сеттеру та геттеру) для зміни та перегляду значень змінних.

	Приклад
Нижче наведено приклад процесу інкапсуляції в Java:

/* File name : EncapTest.java */
public class EncapTest {
   private String name;
   private String idNum;
   private int age;

   public int getAge() {
      return age;
   }

   public String getName() {
      return name;
   }

   public String getIdNum() {
      return idNum;
   }

   public void setAge(int newAge) {
      age = newAge;
   }

   public void setName(String newName) {
      name = newName;
   }

   public void setIdNum(String newId) {
      idNum = newId;
   }
}

Публічні методи setXXX() та getXXX() є точками доступу змінних екземпляра класу EncapTest. Зазвичай ці методи згадуються як гетери та сеттери. Отже, будь-який клас, який хоче отримати доступ до змінних, має отримати до них доступ через ці гетери та сеттери.

Доступ до змінних класу EncapTest можна отримати наступною програмою:

/* Ім'я файлу: RunEncap.java */
публічний клас RunEncap {

   public static void main(String args[]) {
      EncapTest encap = новий EncapTest();
      encap.setName("Олег");
      encap.setAge(28);
      encap.setIdNum("12343 мс");

      System.out.print("Імя: " + encap.getName() + ", возраст: " + encap.getAge());
   }
}
Ми отримаємо наступний результат:

Ім'я: Олег, вік: 28


	Переваги інкапсуляції
•Поля класу можна зробити лише для читання або лише для запису.
•Клас може мати повний контроль над тим, що зберігається у його полях.