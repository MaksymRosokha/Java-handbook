Мова Java підтримує три типи коментарів:

№	та опис
1	/* текст */
	Компілятор ігнорує все від /* до */.
2	//Текст
	Компілятор ігнорує все від // до кінця рядка.
3	/** Документація */
	Це документаційний коментар. Інструмент JDK (комплект розробника програм на мові Java) javadoc використовує документаційні коментарі при підготовці автоматично створеної документації.

Цей розділ присвячений як користуватися Javadoc. Ми подивимося, як ми можемо використовувати Javadoc для створення корисної документації для Java коду.


		~Що таке Javadoc?
Javadoc – це інструмент, який постачається з JDK і використовується для створення документації коду Java у форматі HTML з вихідного коду Java, для чого потрібна документація у визначеному форматі.

Нижче наводиться простий приклад, у якому рядки всередині /*….*/ є багаторядкові коментарі Java. Так само рядок, що передує //, є однорядковим коментарем Java.

	Приклад 1

/**
* Програма HelloWorld реалізує додаток, який
* Виводить "Привіт, Мир!" на стандартному потоці виведення.
*
* @ Автор Zara Ali
* @версія 1.0
* @ Від 2014-03-31
*/
public class HelloWorld {

   public static void main(String[] args) {
      // Виводить "Привіт, Мир!" на стандартному потоці виведення.
      System.out.println("Привіт, Світ!");
   }
}
Ви можете увімкнути необхідні HTML-теги всередині частини опису. Наприклад, у цьому прикладі використовується <h1> .... </h1> для заголовка, а <p> використовується для створення розриву абзацу.

	Приклад 2
/**
* <h1> Привіт, Світ!</h1>
* Програма HelloWorld реалізує додаток, який
* виводить "Привіт, Мир!" на стандартному потоці виведення.
* <p>
* Правильні коментарі у вашій програмі роблять її більш
* зручною для користувача і передбачається, що цей код є
* Більш високоякісним.
*
* @ Автор Zara Ali
* @ версія 1.0
* @ Від 2014-03-31
*/
public class HelloWorld {

   public static void main(String[] args) {
      // Виводить "Привіт, Світ!" на стандартному потоці виведення.
      System.out.println("Привіт, Світ!");
   }
}


		~Теги Javadoc
Інструмент javadoc розпізнає наступні теги:

Тег	Опис	Синтаксис
@автор	Додає автора класу.	@author name-text
{@code}	Показує текст шрифтом коду без інтерпретації тексту як розмітки HTML або вкладених тегів javadoc.	{@code text}
{@docRoot}	Представляє відносний шлях до кореневого каталогу згенерованого документа від будь-якої сторінки, що згенерувала.	{@docRoot}
@застаріло	Додає коментар, що вказує, що цей прикладний програмний інтерфейс не слід використовувати.	@deprecated застарілий текст
@exception	Додає підзаголовок Throws до згенерованої документації з ім'ям класу та текстом опису	@exception опис імені класу
{@inheritDoc}	Наслідує коментар від найближчого успадкованого класу або реалізованого інтерфейсу	Успадковує коментар від безпосереднього надкласу.
{@link}	Вставляє вбудоване посилання з видимою текстовою міткою, яка вказує на документацію для зазначеного пакета, класу або імені члена зазначеного класу.	{@link package.class#member label}
{@linkplain}	Ідентично {@link}, за винятком того, що підпис посилання відображається у вигляді звичайного тексту, а не шрифту коду.	{@linkplain package.class#member label}
@param	Додає параметр із зазначеним ім'ям параметра, за яким слідує вказаний опис, у розділі «Параметри».	@param опис імені-параметра
@повернення	Додає розділ «Повернення» із текстом опису.	Опис @return
@побачити	Додає заголовок «Дивіться також» із посиланням або текстовим записом, що вказує на посилання.	@див. посилання
@serial	Використовується в коментарі до документа для поля, що серіалізується за замовчуванням.	@serial поле-опис | включати | виключити
@serialData	Документує дані, записані методами writeObject() або writeExternal().	@serialData опис даних
@serialField	Документує компонент ObjectStreamField.	@serialField назва-поля опис-тип поля
@з тих пір	Додає заголовок «Від» із зазначеним текстом у створену документацію.	@з моменту випуску
@кидає	Теги @throws та @exception є синонімами.	@кидає опис імені класу
{@value}	Коли {@value} використовується в коментарі до статичного поля, він відображає значення цієї константи.	{@value package.class#field}
@version	Додає підзаголовок «Версія» із зазначеним текстом версії до згенерованих документів під час використання параметра -version.	@version версія-текст

	Приклад
Наступна програма використовує кілька важливих тегів, які доступні для коментарів до документації. Ви можете використовувати інші теги, залежно від ваших вимог.

Документація про клас AddNum буде створена в HTML-файлі AddNum.html, але в той же час буде створено головний файл під назвою index.html.

import java.io.*;

/**
* <h1> Складіть два числа!</h1>
* Програма AddNum реалізує додаток, який
* просто складає два заданих цілих числа і виводить
* Результат на екран.
* <p>
* <b>Примітка:</b> Правильні коментарі у вашій програмі
* зручною для користувача і передбачається, що цей код є
* Більш високоякісним.
*
* @ Автор Zara Ali
* @версія 1.0
* @ Від 2014-03-31
*/
public class AddNum {
   /**
   * Цей метод використовується для складання двох цілих чисел. Це
   * найпростіша форма методу класу, просто щоб
   * показати використання різних тегів javadoc.
   * @param numA Це перший параметр методу addNum
   * @param numB Це другий параметр методу addNum
   * @return int Це повертає суму numA та numB.
   */
   public int addNum(int numA, int numB) {
      return numA + numB;
   }

   /**
   * Це основний метод, який використовує метод addNum.
   * @param args Не використовується.
   * @return Нічого.
   * @exception IOException При помилці введення.
   * @see IOException
   */

   public static void main(String args[]) throws IOException {
      AddNum obj = New AddNum();
      int sum = obj.addNum(10, 20);

      System.out.println("Суммою 10 і 20 є:" + sum);
   }
}

Тепер обробіть вищевказаний файл AddNum.java за допомогою утиліти javadoc таким чином:

$javadoc AddNum.java
Завантаження вихідного файлу AddNum.java ...
Створення інформації Javadoc ...
Версії стандартного Doclet 1.7.0_51
Побудова схеми у вигляді дерева для всіх пакетів та класів.
Створення /AddNum.html ...
AddNum.java:36: попередження - @return тег не може використовуватися в методі з типом повернення void.
Створення /package-frame.html ...
Створення /package-summary.html ...
Створення /package-tree.html ...
Створення /constant-values.html ...
Побудова індексу для всіх пакетів та класів.
Створення /overview-tree.html ...
Створення /index-all.html ...
Створення /deprecated-list.html ...
Побудова індексу для всіх класів.
Створення /allclasses-frame.html ...
Створення /allclasses-noframe.html ...
Створення /index.html ...
Створення /help-doc.html ...
1 попередження
$