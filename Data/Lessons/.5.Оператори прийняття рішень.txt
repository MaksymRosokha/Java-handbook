Структура прийняття рішення складається з однієї або кількох умов, які перевіряються в рамках програми разом з оператором або операторами, які повинні бути виконані, якщо умова визначається як істинно, і, можливо, інші оператори, які виконуватимуться, якщо умова визначається як хибно.

Мова програмування Java пропонує такі види операторів прийняття рішень:
Оператор 		Опис
if 			Оператор if складається з логічного виразу, після якого слідує один або більше операторів.
if..else 		Оператор if може супроводжуватися додатковим оператором else, який виконується при помилковому логічному вираженні.
умовний (? :) 		Ви можете використовувати для заміни операторів if...else.
вкладений if 		Ви можете використовувати один оператор if або оператор if...else всередині іншого або інших операторів if або if...else.
switch 			Оператор switch дозволяє змінної бути перевірені на рівність щодо списку значень.



		~if
Оператор if - складається з логічного виразу, після якого слідує один або більше операторів.
	Синтаксис
Синтаксис оператора if в Java наступний:

if(Логічний вираз)
{
    //Оператори виконуються, якщо істинно
}
Якщо логічний вираз істинний, то блок коду всередині оператора if буде виконаний. Якщо ні, то буде виконуватися наступний блок коду, що йде після оператора if (після фігурної дужки, що закриває).
	Приклад
public class Test {

    public static void main(String args[]){
       int x = 10;

       if( x < 20 ){
          System.out.print("Це оператор if");
       }
    }
}
Буде отримано наступний результат:
Це оператор if


		~if..else 
Java оператор if може супроводжуватися додатковим оператором else, який виконується при помилковому логічному виразі.
	Синтаксис
Синтаксис оператора if..else в Java наступний:

if(Логічний вираз)
{
    //Виконується, якщо істинно
} else {
    //Виконується, якщо хибно
}
Якщо логічний вираз істинний, то блок коду if буде виконано, інакше буде виконано блок коду else.
	Приклад
public class Test {

    public static void main(String args[]){
       int x = 30;

       if( x < 20 ){
          System.out.print("Це оператор if");
       }else{
          System.out.print("Це оператор else");
       }
    }
}
Буде отримано наступний результат:
Це оператор else


		~switch 
Оператор switch - перевіряє змінну на рівність щодо списку значень. Кожне значення називається case, і змінна перемикання перевіряється для кожного case.
	Синтаксис
Синтаксис для розширеного циклу switch Java наступний:

switch (вираз) {
    case значення :
       //Оператори
       break; //не обов'язково
    case значення :
       //Оператори
       break; //не обов'язково
    //Ви можете мати будь-яку кількість операторів case.
    default : // необов'язково
       //Оператори
}
Наступні правила застосовуються для оператора switch:

•Змінні, які використовуються в операторі switch, можуть бути лише цілі числа, конвертовані в цілі числа (byte, short, char), рядки та перерахування.
•Ви можете мати будь-яку кількість операторів case в рамках одного switch. За кожним case слід порівнюване значення, а потім йде двокрапка.
•Значення case має бути такого ж типу даних, як і змінна в switch, і вона повинна бути константою або літерал.
•Коли змінна switch дорівнює оператору case, оператори наступні за case будуть виконуватися до тих пір, поки не буде досягнутий оператор break.
•При досягненні оператора break switch завершується, і потік управління переходить до наступного рядка після оператора switch.
•Не кожний case мусить утримати break. Якщо відсутня break, потік управління потрапить на наступні case, доки break не буде досягнуто.
•У Java оператор switch може мати додатковий default case, який має знаходитися в кінці switch. Default case може бути використаний для виконання завдання, коли жоден із case є правильним. Break не потрібно в default case.
	Приклад
public class Test {

   public static void main(String args[]){
      //char grade = args[0].charAt(0);
      char grade = 'C';

      switch(grade)
      {
         case 'A':
            System.out.println("Чудово!");
            break;
         case 'B':
         case 'C':
            System.out.println("Чудово виконано");
            break;
         case 'D':
            System.out.println("Ви пройшли");
         case 'F':
            System.out.println("Краще спробуйте знову");
            break;
         default :
            System.out.println("Неправильна оцінка");
      }
      System.out.println("Ваша оцінка" + grade);
   }
}
Скомпілюйте та запустіть java-програму, використовуючи різні аргументи у командному рядку. Буде отримано наступний результат:

Чудово виконано
Ваша оцінка C


		~Умовний (? :) 
Умовний оператор? : (знак питання та двокрапка) в Java, який може бути використаний для заміни операторів if..else. Він має такий загальний вигляд:

Exp1? Exp2: Exp3;
Де Exp1, Exp2 та Exp3 є виразами. Зверніть увагу на використання та розміщення двокрапки.
Щоб визначити значення всього виразу, спочатку потрібно оцінити Exp1:

Якщо значення Exp1 вірне, то значення Exp2 буде значенням виразу.
Якщо значення Exp1 хибно, то обчислюється Exp3 та його значення стає значенням всього виразу.